name: Build LootLogger

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --omit=dev
        
      - name: Create package folder
        run: mkdir loot-logger
        
      - name: Copy assets
        run: |
          xcopy /E /I node_modules loot-logger\node_modules
          xcopy /E /I src loot-logger\src
          copy package.json loot-logger\
          
      - name: Install caxa
        run: npm install --global caxa
        
      - name: Package the app
        run: caxa --input loot-logger --output "loot-logger-win.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/src/index.js"
        
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: loot-logger-windows
          path: loot-logger-win.exe
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libpcap-dev
          
      - name: Install dependencies
        run: npm install --omit=dev
        
      - name: Create package folder
        run: mkdir -p loot-logger
        
      - name: Copy assets
        run: |
          cp -r node_modules/ loot-logger/
          cp -r src/ loot-logger/
          cp package.json loot-logger/
          
      - name: Install caxa
        run: npm install --global caxa
        
      - name: Package the app
        run: caxa --input loot-logger --output "loot-logger-linux" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/src/index.js"
        
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: loot-logger-linux
          path: loot-logger-linux
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: loot-logger-windows
          
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: loot-logger-linux
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: LootLogger ${{ github.ref_name }} - Transparent Loot Tracking
          body: |
            # üöÄ LootLogger ${{ github.ref_name }} - Transparent Loot Tracking

            ## üéØ What is LootLogger?

            LootLogger is a **transparent and fair** loot logging tool for Albion Online that captures **ALL loot events** without any player filtering, whitelists, or paid exclusions.

            ## ‚ú® Key Features

            - üîç **100% Transparent** - Every loot event is logged without exception
            - ‚öñÔ∏è **Fair for Everyone** - No player filtering or blacklist system  
            - üìä **Complete Data** - Full data integrity for analysis and tracking
            - üîß **Easy to Use** - Simple installation and setup
            - üåê **Cross-Platform** - Available for Windows and Linux

            ## üì• Downloads

            | Platform | File | Requirements |
            |----------|------|-------------|
            | **Windows** | `loot-logger-win.exe` | [Npcap with WinPcap compatibility](https://nmap.org/npcap) |
            | **Linux** | `loot-logger-linux` | `libpcap-dev` package |

            ## üöÄ Quick Start

            ### Windows
            1. Download `loot-logger-win.exe`
            2. Install [Npcap with WinPcap compatibility](https://nmap.org/npcap)
            3. Run the executable
            4. Start Albion Online and the logger will capture loot events

            ### Linux
            1. Download `loot-logger-linux`
            2. Install libpcap: `sudo apt-get install libpcap-dev`
            3. Make executable: `chmod +x loot-logger-linux`
            4. Run: `./loot-logger-linux`

            ## üìä Output Format

            Creates CSV files with format:
            ```
            timestamp_utc;looted_by__alliance;looted_by__guild;looted_by__name;item_id;item_name;quantity;looted_from__alliance;looted_from__guild;looted_from__name
            ```

            ## ‚ö†Ô∏è Important Notes

            - **Does not work with VPN** (Exit Lag, etc.) or GeForce Now due to packet capture limitations
            - **Requires admin/root privileges** for network packet capture
            - **Logs are saved locally** in the same directory as the executable

            ## üõ†Ô∏è Technical Details

            - Built with Node.js and packaged as standalone executables
            - Uses packet capture to monitor Albion Online network traffic
            - No external dependencies or remote configurations
            - Completely offline operation after initial setup

            ---

            **Join the transparent loot logging movement for Albion Online! üéÆ**

            For issues, questions, or contributions, visit our [GitHub repository](https://github.com/juniorafonso/LootLogger).
          files: |
            loot-logger-win.exe
            loot-logger-linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
